name: Build and push a release image

on:
  push:
    tags:
      - v*

jobs:
  get-version:
    runs-on: [ubuntu-latest]
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
    - name: Extract version from Github ref
      id: get-version
      env:
        TAG: ${{ github.ref }}
      run: |
        version=${TAG:10}
        echo "::set-output name=version::$version"

  build-clickhouse-monitor:
    runs-on: [ubuntu-latest]
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    - name: Build clickhouse-monitor Docker image and push to registry
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        make clickhouse-monitor
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push antrea/theia-clickhouse-monitor:"${VERSION}"

  build-clickhouse-server:
    runs-on: [ubuntu-latest]
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build clickhouse-server Docker image and push to registry
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        make clickhouse-server-multi-arch

  build-policy-recommendation:
    runs-on: [ubuntu-latest]
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    - name: Build policy-recommendation Docker image and push to registry
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        make policy-recommendation
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push antrea/theia-policy-recommendation:"${VERSION}"

  build-throughput-anomaly-detection:
    runs-on: [ubuntu-latest]
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    - name: Build throughput-anomaly-detection Docker image and push to registry
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        make throughput-anomaly-detection
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push antrea/theia-throughput-anomaly-detection:"${VERSION}"

  build-theia-manager:
    runs-on: [ubuntu-latest]
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    - name: Build theia-manager Docker image and push to registry
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        make theia-manager
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push antrea/theia-manager:"${VERSION}"
